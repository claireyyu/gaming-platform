<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.cie.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="cn.cie.entity.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="phone" jdbcType="BIGINT" property="phone" />
    <result column="ctime" jdbcType="TIMESTAMP" property="ctime" />
    <result column="utime" jdbcType="TIMESTAMP" property="utime" />
    <result column="stat" jdbcType="TINYINT" property="stat" />
  </resultMap>
  <sql id="Base_Column_List">
    id, username, password, nickname, email, phone, ctime, utime, stat
  </sql>
  <sql id="Columns_Without_Pwd">
    id, username, nickname, email, phone, ctime, utime, stat
  </sql>

  <select id="selectById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where username = #{username,jdbcType=VARCHAR}
  </select>
  <select id="selectByEmail" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where email = #{email,jdbcType=VARCHAR}
  </select>
  <select id="selectByStat" parameterType="java.lang.Byte" resultMap="BaseResultMap">
    select id, ctime from user where stat = #{stat,jdbcType=TINYINT}
  </select>
  <select id="selectByPage" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Columns_Without_Pwd" />
    from user where id != 1
    order by id asc limit #{startPos}, #{size}
  </select>
  <select id="selectAllNums" resultType="java.lang.Integer">
    select count(id) from user where id != 1;
  </select>

  <insert id="insert" parameterType="cn.cie.entity.User" useGeneratedKeys="true" keyProperty="id">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="phone != null">
        phone,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>

  <update id="update" parameterType="cn.cie.entity.User">
    update user
    <set>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=BIGINT},
      </if>
      <if test="stat != null">
        stat = #{stat,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

  <delete id="deleteById" parameterType="java.lang.Integer">
    delete from user where id = #{id,jdbcType=INTEGER}
  </delete>

</mapper>